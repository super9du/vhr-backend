<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="xyz.gotop.vhr.mapper.EmployeeMapper">
  <resultMap id="BaseResultMap" type="xyz.gotop.vhr.model.Employee">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="gender" jdbcType="CHAR" property="gender" />
    <result column="birthday" jdbcType="DATE" property="birthday" />
    <result column="idCard" jdbcType="CHAR" property="idcard" />
    <result column="wedlock" jdbcType="CHAR" property="wedlock" />
    <result column="nativePlace" jdbcType="VARCHAR" property="nativeplace" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="address" jdbcType="VARCHAR" property="address" />
    <result column="engageForm" jdbcType="VARCHAR" property="engageform" />
    <result column="tiptopDegree" jdbcType="CHAR" property="tiptopdegree" />
    <result column="specialty" jdbcType="VARCHAR" property="specialty" />
    <result column="school" jdbcType="VARCHAR" property="school" />
    <result column="beginDate" jdbcType="DATE" property="begindate" />
    <result column="workState" jdbcType="CHAR" property="workstate" />
    <result column="workID" jdbcType="CHAR" property="workid" />
    <result column="contractTerm" jdbcType="DOUBLE" property="contractterm" />
    <result column="conversionTime" jdbcType="DATE" property="conversiontime" />
    <result column="notWorkDate" jdbcType="DATE" property="notworkdate" />
    <result column="beginContract" jdbcType="DATE" property="begincontract" />
    <result column="endContract" jdbcType="DATE" property="endcontract" />
    <result column="workAge" jdbcType="INTEGER" property="workage" />
  </resultMap>
  <resultMap id="WithAllReferenceMap" type="xyz.gotop.vhr.model.Employee" extends="BaseResultMap">
    <association property="nation" javaType="xyz.gotop.vhr.model.Nation" resultMap="NationMap"/>
    <association property="politicsstatus" javaType="xyz.gotop.vhr.model.Politicsstatus" resultMap="PoliticStatusMap"/>
    <association property="department" javaType="xyz.gotop.vhr.model.Department" resultMap="DepartmentMap"/>
    <association property="joblevel" javaType="xyz.gotop.vhr.model.JobLevel" resultMap="JobLevelMap"/>
    <association property="position" javaType="xyz.gotop.vhr.model.Position" resultMap="PositionMap"/>
  </resultMap>
  <resultMap id="NationMap" type="xyz.gotop.vhr.model.Nation">
    <id property="id" column="nid" jdbcType="INTEGER"/>
    <result property="name" column="nname" jdbcType="VARCHAR"/>
  </resultMap>
  <resultMap id="PoliticStatusMap" type="xyz.gotop.vhr.model.Politicsstatus">
    <id property="id" column="pid" jdbcType="INTEGER"/>
    <result property="name" column="pname" jdbcType="VARCHAR"/>
  </resultMap>
  <resultMap id="DepartmentMap" type="xyz.gotop.vhr.model.Department">
    <id property="id" column="did" jdbcType="INTEGER"/>
    <result property="name" column="dname" jdbcType="VARCHAR"/>
  </resultMap>
  <resultMap id="JobLevelMap" type="xyz.gotop.vhr.model.JobLevel">
    <id property="id" column="jid" jdbcType="INTEGER"/>
    <result property="name" column="jname" jdbcType="VARCHAR"/>
    <result property="titlelevel" column="jtitlelevel" jdbcType="VARCHAR"/>
  </resultMap>
  <resultMap id="PositionMap" type="xyz.gotop.vhr.model.Position">
    <id property="id" column="posid" jdbcType="INTEGER"/>
    <result property="name" column="posname" jdbcType="VARCHAR"/>
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, `name`, gender, birthday, idCard, wedlock, nationId, nativePlace, politicId, 
    email, phone, address, departmentId, jobLevelId, posId, engageForm, tiptopDegree, 
    specialty, school, beginDate, workState, workID, contractTerm, conversionTime, notWorkDate, 
    beginContract, endContract, workAge
  </sql>
  <select id="selectByExample" parameterType="xyz.gotop.vhr.model.EmployeeExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from employee
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from employee
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from employee
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="xyz.gotop.vhr.model.EmployeeExample">
    delete from employee
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="xyz.gotop.vhr.model.Employee">
    insert into employee (id, `name`, gender,
      birthday, idCard, wedlock, nationId,
      nativePlace, politicId, email,
      phone, address, departmentId,
      jobLevelId, posId, engageForm,
      tiptopDegree, specialty, school,
      beginDate, workState, workID,
      contractTerm, conversionTime, notWorkDate,
      beginContract, endContract, workAge
      )
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{gender,jdbcType=CHAR},
      #{birthday,jdbcType=DATE}, #{idcard,jdbcType=CHAR}, #{wedlock,jdbcType=CHAR}, #{nationid,jdbcType=INTEGER},
      #{nativeplace,jdbcType=VARCHAR}, #{politicid,jdbcType=INTEGER}, #{email,jdbcType=VARCHAR},
      #{phone,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR}, #{departmentid,jdbcType=INTEGER},
      #{joblevelid,jdbcType=INTEGER}, #{posid,jdbcType=INTEGER}, #{engageform,jdbcType=VARCHAR},
      #{tiptopdegree,jdbcType=CHAR}, #{specialty,jdbcType=VARCHAR}, #{school,jdbcType=VARCHAR},
      #{begindate,jdbcType=DATE}, #{workstate,jdbcType=CHAR}, #{workid,jdbcType=CHAR},
      #{contractterm,jdbcType=DOUBLE}, #{conversiontime,jdbcType=DATE}, #{notworkdate,jdbcType=DATE},
      #{begincontract,jdbcType=DATE}, #{endcontract,jdbcType=DATE}, #{workage,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="xyz.gotop.vhr.model.Employee">
    insert into employee
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="name != null">
        `name`,
      </if>
      <if test="gender != null">
        gender,
      </if>
      <if test="birthday != null">
        birthday,
      </if>
      <if test="idcard != null">
        idCard,
      </if>
      <if test="wedlock != null">
        wedlock,
      </if>
      <if test="nationid != null">
        nationId,
      </if>
      <if test="nativeplace != null">
        nativePlace,
      </if>
      <if test="politicid != null">
        politicId,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="address != null">
        address,
      </if>
      <if test="departmentid != null">
        departmentId,
      </if>
      <if test="joblevelid != null">
        jobLevelId,
      </if>
      <if test="posid != null">
        posId,
      </if>
      <if test="engageform != null">
        engageForm,
      </if>
      <if test="tiptopdegree != null">
        tiptopDegree,
      </if>
      <if test="specialty != null">
        specialty,
      </if>
      <if test="school != null">
        school,
      </if>
      <if test="begindate != null">
        beginDate,
      </if>
      <if test="workstate != null">
        workState,
      </if>
      <if test="workid != null">
        workID,
      </if>
      <if test="contractterm != null">
        contractTerm,
      </if>
      <if test="conversiontime != null">
        conversionTime,
      </if>
      <if test="notworkdate != null">
        notWorkDate,
      </if>
      <if test="begincontract != null">
        beginContract,
      </if>
      <if test="endcontract != null">
        endContract,
      </if>
      <if test="workage != null">
        workAge,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="gender != null">
        #{gender,jdbcType=CHAR},
      </if>
      <if test="birthday != null">
        #{birthday,jdbcType=DATE},
      </if>
      <if test="idcard != null">
        #{idcard,jdbcType=CHAR},
      </if>
      <if test="wedlock != null">
        #{wedlock,jdbcType=CHAR},
      </if>
      <if test="nationid != null">
        #{nationid,jdbcType=INTEGER},
      </if>
      <if test="nativeplace != null">
        #{nativeplace,jdbcType=VARCHAR},
      </if>
      <if test="politicid != null">
        #{politicid,jdbcType=INTEGER},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="departmentid != null">
        #{departmentid,jdbcType=INTEGER},
      </if>
      <if test="joblevelid != null">
        #{joblevelid,jdbcType=INTEGER},
      </if>
      <if test="posid != null">
        #{posid,jdbcType=INTEGER},
      </if>
      <if test="engageform != null">
        #{engageform,jdbcType=VARCHAR},
      </if>
      <if test="tiptopdegree != null">
        #{tiptopdegree,jdbcType=CHAR},
      </if>
      <if test="specialty != null">
        #{specialty,jdbcType=VARCHAR},
      </if>
      <if test="school != null">
        #{school,jdbcType=VARCHAR},
      </if>
      <if test="begindate != null">
        #{begindate,jdbcType=DATE},
      </if>
      <if test="workstate != null">
        #{workstate,jdbcType=CHAR},
      </if>
      <if test="workid != null">
        #{workid,jdbcType=CHAR},
      </if>
      <if test="contractterm != null">
        #{contractterm,jdbcType=DOUBLE},
      </if>
      <if test="conversiontime != null">
        #{conversiontime,jdbcType=DATE},
      </if>
      <if test="notworkdate != null">
        #{notworkdate,jdbcType=DATE},
      </if>
      <if test="begincontract != null">
        #{begincontract,jdbcType=DATE},
      </if>
      <if test="endcontract != null">
        #{endcontract,jdbcType=DATE},
      </if>
      <if test="workage != null">
        #{workage,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <insert id="insertBulk">
    insert into employee(id, `name`, gender, birthday, idCard, wedlock, nationId, nativePlace, politicId,
    email, phone, address, departmentId, jobLevelId, posId, engageForm, tiptopDegree,
    specialty, school, beginDate, workState, workID, contractTerm, conversionTime, notWorkDate,
    beginContract, endContract, workAge)
    values
    <foreach collection="list" item="item" separator=",">
      (#{item.id,jdbcType=INTEGER}, #{item.name,jdbcType=VARCHAR}, #{item.gender,jdbcType=CHAR},
      #{item.birthday,jdbcType=DATE}, #{item.idcard,jdbcType=CHAR}, #{item.wedlock,jdbcType=CHAR},
      #{item.nation.id,jdbcType=INTEGER}, #{item.nativeplace,jdbcType=VARCHAR},
      #{item.politicsstatus.id,jdbcType=INTEGER},
      #{item.email,jdbcType=VARCHAR}, #{item.phone,jdbcType=VARCHAR}, #{item.address,jdbcType=VARCHAR},
      #{item.department.id,jdbcType=INTEGER}, #{item.joblevel.id,jdbcType=INTEGER},
      #{item.position.id,jdbcType=INTEGER},
      #{item.engageform,jdbcType=VARCHAR}, #{item.tiptopdegree,jdbcType=CHAR}, #{item.specialty,jdbcType=VARCHAR},
      #{item.school,jdbcType=VARCHAR}, #{item.begindate,jdbcType=DATE}, #{item.workstate,jdbcType=CHAR},
      #{item.workid,jdbcType=CHAR}, #{item.contractterm,jdbcType=DOUBLE}, #{item.conversiontime,jdbcType=DATE},
      #{item.notworkdate,jdbcType=DATE}, #{item.begincontract,jdbcType=DATE}, #{item.endcontract,jdbcType=DATE},
      #{item.workage,jdbcType=INTEGER})
    </foreach>
  </insert>
  <select id="countByExample" parameterType="xyz.gotop.vhr.model.EmployeeExample" resultType="java.lang.Long">
    select count(*) from employee
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <select id="list" resultMap="WithAllReferenceMap">
    SELECT e.*,
           n.`id`     AS nid,
           n.`name`   AS nname,
           p.`id`     AS pid,
           p.`name`   AS pname,
           d.`id`     AS did,
           d.`name`   AS dname,
           j.`id`     AS jid,
           j.`name`   AS jname,
           j.`titleLevel` AS jtitlelevel,
           pos.`id`   AS posid,
           pos.`name` AS posname
    FROM employee AS e
           LEFT JOIN nation AS n ON e.`nationId` = n.`id`
           LEFT JOIN politicsstatus AS p ON e.`politicId` = p.`id`
           LEFT JOIN department AS d ON e.`departmentId` = d.`id`
           LEFT JOIN joblevel AS j ON e.`jobLevelId` = j.`id`
           LEFT JOIN `position` AS pos ON e.`posId` = pos.`id`
    <if test="keyword!=null and keyword!=''">
      WHERE e.name LIKE CONCAT('%', #{keyword}, '%')
    </if>
    LIMIT #{offset}, #{size}
  </select>
  <select id="getTotal" resultType="java.lang.Integer">
    select count(*) from employee
    <if test="keyword!=null and keyword!=''">
      WHERE name LIKE CONCAT('%', #{keyword}, '%')
    </if>
  </select>
  <select id="get" resultMap="WithAllReferenceMap">
    SELECT e.*,
           n.`id`     AS nid,
           n.`name`   AS nname,
           p.`id`     AS pid,
           p.`name`   AS pname,
           d.`id`     AS did,
           d.`name`   AS dname,
           j.`id`     AS jid,
           j.`name`   AS jname,
           j.`titleLevel` AS jtitlelevel,
           pos.`id`   AS posid,
           pos.`name` AS posname
    FROM employee AS e
           LEFT JOIN nation AS n ON e.`nationId` = n.`id`
           LEFT JOIN politicsstatus AS p ON e.`politicId` = p.`id`
           LEFT JOIN department AS d ON e.`departmentId` = d.`id`
           LEFT JOIN joblevel AS j ON e.`jobLevelId` = j.`id`
           LEFT JOIN `position` AS pos ON e.`posId` = pos.`id`
    WHERE e.`id` = #{id}
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update employee
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.name != null">
        `name` = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.gender != null">
        gender = #{record.gender,jdbcType=CHAR},
      </if>
      <if test="record.birthday != null">
        birthday = #{record.birthday,jdbcType=DATE},
      </if>
      <if test="record.idcard != null">
        idCard = #{record.idcard,jdbcType=CHAR},
      </if>
      <if test="record.wedlock != null">
        wedlock = #{record.wedlock,jdbcType=CHAR},
      </if>
      <if test="record.nationid != null">
        nationId = #{record.nationid,jdbcType=INTEGER},
      </if>
      <if test="record.nativeplace != null">
        nativePlace = #{record.nativeplace,jdbcType=VARCHAR},
      </if>
      <if test="record.politicid != null">
        politicId = #{record.politicid,jdbcType=INTEGER},
      </if>
      <if test="record.email != null">
        email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.phone != null">
        phone = #{record.phone,jdbcType=VARCHAR},
      </if>
      <if test="record.address != null">
        address = #{record.address,jdbcType=VARCHAR},
      </if>
      <if test="record.departmentid != null">
        departmentId = #{record.departmentid,jdbcType=INTEGER},
      </if>
      <if test="record.joblevelid != null">
        jobLevelId = #{record.joblevelid,jdbcType=INTEGER},
      </if>
      <if test="record.posid != null">
        posId = #{record.posid,jdbcType=INTEGER},
      </if>
      <if test="record.engageform != null">
        engageForm = #{record.engageform,jdbcType=VARCHAR},
      </if>
      <if test="record.tiptopdegree != null">
        tiptopDegree = #{record.tiptopdegree,jdbcType=CHAR},
      </if>
      <if test="record.specialty != null">
        specialty = #{record.specialty,jdbcType=VARCHAR},
      </if>
      <if test="record.school != null">
        school = #{record.school,jdbcType=VARCHAR},
      </if>
      <if test="record.begindate != null">
        beginDate = #{record.begindate,jdbcType=DATE},
      </if>
      <if test="record.workstate != null">
        workState = #{record.workstate,jdbcType=CHAR},
      </if>
      <if test="record.workid != null">
        workID = #{record.workid,jdbcType=CHAR},
      </if>
      <if test="record.contractterm != null">
        contractTerm = #{record.contractterm,jdbcType=DOUBLE},
      </if>
      <if test="record.conversiontime != null">
        conversionTime = #{record.conversiontime,jdbcType=DATE},
      </if>
      <if test="record.notworkdate != null">
        notWorkDate = #{record.notworkdate,jdbcType=DATE},
      </if>
      <if test="record.begincontract != null">
        beginContract = #{record.begincontract,jdbcType=DATE},
      </if>
      <if test="record.endcontract != null">
        endContract = #{record.endcontract,jdbcType=DATE},
      </if>
      <if test="record.workage != null">
        workAge = #{record.workage,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update employee
    set id = #{record.id,jdbcType=INTEGER},
      `name` = #{record.name,jdbcType=VARCHAR},
      gender = #{record.gender,jdbcType=CHAR},
      birthday = #{record.birthday,jdbcType=DATE},
      idCard = #{record.idcard,jdbcType=CHAR},
      wedlock = #{record.wedlock,jdbcType=CHAR},
      nationId = #{record.nationid,jdbcType=INTEGER},
      nativePlace = #{record.nativeplace,jdbcType=VARCHAR},
      politicId = #{record.politicid,jdbcType=INTEGER},
      email = #{record.email,jdbcType=VARCHAR},
      phone = #{record.phone,jdbcType=VARCHAR},
      address = #{record.address,jdbcType=VARCHAR},
      departmentId = #{record.departmentid,jdbcType=INTEGER},
      jobLevelId = #{record.joblevelid,jdbcType=INTEGER},
      posId = #{record.posid,jdbcType=INTEGER},
      engageForm = #{record.engageform,jdbcType=VARCHAR},
      tiptopDegree = #{record.tiptopdegree,jdbcType=CHAR},
      specialty = #{record.specialty,jdbcType=VARCHAR},
      school = #{record.school,jdbcType=VARCHAR},
      beginDate = #{record.begindate,jdbcType=DATE},
      workState = #{record.workstate,jdbcType=CHAR},
      workID = #{record.workid,jdbcType=CHAR},
      contractTerm = #{record.contractterm,jdbcType=DOUBLE},
      conversionTime = #{record.conversiontime,jdbcType=DATE},
      notWorkDate = #{record.notworkdate,jdbcType=DATE},
      beginContract = #{record.begincontract,jdbcType=DATE},
      endContract = #{record.endcontract,jdbcType=DATE},
      workAge = #{record.workage,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="xyz.gotop.vhr.model.Employee">
    update employee
    <set>
      <if test="name != null">
        `name` = #{name,jdbcType=VARCHAR},
      </if>
      <if test="gender != null">
        gender = #{gender,jdbcType=CHAR},
      </if>
      <if test="birthday != null">
        birthday = #{birthday,jdbcType=DATE},
      </if>
      <if test="idcard != null">
        idCard = #{idcard,jdbcType=CHAR},
      </if>
      <if test="wedlock != null">
        wedlock = #{wedlock,jdbcType=CHAR},
      </if>
      <if test="nationid != null">
        nationId = #{nationid,jdbcType=INTEGER},
      </if>
      <if test="nativeplace != null">
        nativePlace = #{nativeplace,jdbcType=VARCHAR},
      </if>
      <if test="politicid != null">
        politicId = #{politicid,jdbcType=INTEGER},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="departmentid != null">
        departmentId = #{departmentid,jdbcType=INTEGER},
      </if>
      <if test="joblevelid != null">
        jobLevelId = #{joblevelid,jdbcType=INTEGER},
      </if>
      <if test="posid != null">
        posId = #{posid,jdbcType=INTEGER},
      </if>
      <if test="engageform != null">
        engageForm = #{engageform,jdbcType=VARCHAR},
      </if>
      <if test="tiptopdegree != null">
        tiptopDegree = #{tiptopdegree,jdbcType=CHAR},
      </if>
      <if test="specialty != null">
        specialty = #{specialty,jdbcType=VARCHAR},
      </if>
      <if test="school != null">
        school = #{school,jdbcType=VARCHAR},
      </if>
      <if test="begindate != null">
        beginDate = #{begindate,jdbcType=DATE},
      </if>
      <if test="workstate != null">
        workState = #{workstate,jdbcType=CHAR},
      </if>
      <if test="workid != null">
        workID = #{workid,jdbcType=CHAR},
      </if>
      <if test="contractterm != null">
        contractTerm = #{contractterm,jdbcType=DOUBLE},
      </if>
      <if test="conversiontime != null">
        conversionTime = #{conversiontime,jdbcType=DATE},
      </if>
      <if test="notworkdate != null">
        notWorkDate = #{notworkdate,jdbcType=DATE},
      </if>
      <if test="begincontract != null">
        beginContract = #{begincontract,jdbcType=DATE},
      </if>
      <if test="endcontract != null">
        endContract = #{endcontract,jdbcType=DATE},
      </if>
      <if test="workage != null">
        workAge = #{workage,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="xyz.gotop.vhr.model.Employee">
    update employee
    set `name` = #{name,jdbcType=VARCHAR},
      gender = #{gender,jdbcType=CHAR},
      birthday = #{birthday,jdbcType=DATE},
      idCard = #{idcard,jdbcType=CHAR},
      wedlock = #{wedlock,jdbcType=CHAR},
      nationId = #{nationid,jdbcType=INTEGER},
      nativePlace = #{nativeplace,jdbcType=VARCHAR},
      politicId = #{politicid,jdbcType=INTEGER},
      email = #{email,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      departmentId = #{departmentid,jdbcType=INTEGER},
      jobLevelId = #{joblevelid,jdbcType=INTEGER},
      posId = #{posid,jdbcType=INTEGER},
      engageForm = #{engageform,jdbcType=VARCHAR},
      tiptopDegree = #{tiptopdegree,jdbcType=CHAR},
      specialty = #{specialty,jdbcType=VARCHAR},
      school = #{school,jdbcType=VARCHAR},
      beginDate = #{begindate,jdbcType=DATE},
      workState = #{workstate,jdbcType=CHAR},
      workID = #{workid,jdbcType=CHAR},
      contractTerm = #{contractterm,jdbcType=DOUBLE},
      conversionTime = #{conversiontime,jdbcType=DATE},
      notWorkDate = #{notworkdate,jdbcType=DATE},
      beginContract = #{begincontract,jdbcType=DATE},
      endContract = #{endcontract,jdbcType=DATE},
      workAge = #{workage,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>